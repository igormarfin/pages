<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Igor Marfin's home page</title><link href="http://igormarfin.github.com/pages/" rel="alternate"></link><link href="http://igormarfin.github.com/pages/feeds/all.atom.xml" rel="self"></link><id>http://igormarfin.github.com/pages/</id><updated>2013-09-07T00:17:15+02:00</updated><entry><title>How to publish a post with plots</title><link href="http://igormarfin.github.com/pages/posts/2013/09/0017/how-to-publish-a-post-with-plots/" rel="alternate"></link><updated>2013-09-07T00:17:15+02:00</updated><author><name>Igor Marfin</name></author><id>tag:igormarfin.github.com/pages,2013-09-07:posts/2013/09/0017/how-to-publish-a-post-with-plots/</id><summary type="html">&lt;div class="section" id="an-example-of-the-posting-a-report-on-validation-btag-hlt-2011-in-relval53x"&gt;
&lt;h2&gt;An Example of the posting a report on &amp;quot;Validation BTag HLT 2011 in RelVal53X&amp;quot;&lt;/h2&gt;
&lt;p&gt;This is quite easy:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;relpath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yes; prepare_rst2pdf_template 2 &lt;span class="s2"&gt;&amp;quot;500:700&amp;quot;&lt;/span&gt; static/plots53x2011HLT/ png 8 &lt;span class="s2"&gt;&amp;quot;HLT BTAG 2011 MENU RelVal53x&amp;quot;&lt;/span&gt; &amp;gt; 06.09.13_marfin_2011legacyMenu.In53x.rst
&lt;span class="nb"&gt;cd&lt;/span&gt; /mnt/WorkingPlace/myblog/pages/
cp -r /mnt/WorkingPlace/presentation/06.09.13_TSG_meeting/static/plots53x2011HLT  posts/
cp -r /mnt/WorkingPlace/presentation/06.09.13_TSG_meeting/06.09.13_marfin_2011legacyMenu.In53x.rst  .
&lt;span class="c"&gt;# fix header
&lt;/span&gt;nano -w 06.09.13_marfin_2011legacyMenu.In53x.rst
&lt;span class="c"&gt;# fix  add to STATIC_PATHS=[&amp;quot;images&amp;quot;,&amp;quot;plots53x2011HLT&amp;quot;]
&lt;/span&gt;nano -w local_settings.py
nano -w short_local_settings.py
&lt;span class="nv"&gt;_post&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;./posts/&lt;span class="sb"&gt;`&lt;/span&gt;date +%Y&lt;span class="sb"&gt;`&lt;/span&gt;/&lt;span class="sb"&gt;`&lt;/span&gt;date +%m&lt;span class="sb"&gt;`&lt;/span&gt;/&lt;span class="sb"&gt;`&lt;/span&gt;date +%H%M&lt;span class="sb"&gt;`&lt;/span&gt;
mkdir -p  &lt;span class="nv"&gt;$_post&lt;/span&gt;
cp 06.09.13_marfin_2011legacyMenu.In53x.rst &lt;span class="nv"&gt;$_post&lt;/span&gt;
Changeword &lt;span class="s2"&gt;&amp;quot;image:: static&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;image:: http://igormarfin.github.io/pages/static&amp;quot;&lt;/span&gt;  &lt;span class="nv"&gt;$_post&lt;/span&gt;/06.09.13_marfin_2011legacyMenu.In53x.rst &lt;span class="nv"&gt;$_post&lt;/span&gt;/06.09.13_marfin_2011legacyMenu.In53x.rst
deploy_rst_blog  &lt;span class="s2"&gt;&amp;quot;local_settings.py&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Control plots of 2011 HLT RelVal53x study&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;igormarfin&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pages&amp;quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;I'll add a functionality to perform the steps above in the automatic way.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="how-to"></category></entry><entry><title>2011 HLT legacy menu RelVal53X</title><link href="http://igormarfin.github.com/pages/posts/2013/09/2332/2011-hlt-legacy-menu-relval53x/" rel="alternate"></link><updated>2013-09-06T23:32:06+02:00</updated><author><name>Igor Marfin</name></author><id>tag:igormarfin.github.com/pages,2013-09-06:posts/2013/09/2332/2011-hlt-legacy-menu-relval53x/</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name" /&gt;
&lt;col class="field-body" /&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;author:&lt;/th&gt;&lt;td class="field-body"&gt;&amp;quot;I. Marfin &amp;lt;&lt;a class="reference external" href="mailto:igor.marfin&amp;#64;desy.de"&gt;igor.marfin&amp;#64;desy.de&lt;/a&gt;&amp;gt;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="/home/school/rst2pdf-0.92/Desy-logo-big.gif" src="/home/school/rst2pdf-0.92/Desy-logo-big.gif" style="width: 200px; height: 200px;" /&gt;
&lt;div class="section" id="figure-graph-cmssw-5-3-11-plot8"&gt;
&lt;h2&gt;Figure: graph  CMSSW_5_3_11_plot8&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img alt="plots53x2011HLT/graph.png" src="http://igormarfin.github.io/pages/static/plots53x2011HLT/graph.png" style="width: 700px; height: 500px;" /&gt; &lt;img alt="plots53x2011HLT/CMSSW_5_3_11_plot8.png" src="http://igormarfin.github.io/pages/static/plots53x2011HLT/CMSSW_5_3_11_plot8.png" style="width: 700px; height: 500px;" /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="figure-cmssw-5-3-11-plot7-cmssw-5-3-11-plot6"&gt;
&lt;h2&gt;Figure: CMSSW_5_3_11_plot7  CMSSW_5_3_11_plot6&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img alt="plots53x2011HLT/CMSSW_5_3_11_plot7.png" src="http://igormarfin.github.io/pages/static/plots53x2011HLT/CMSSW_5_3_11_plot7.png" style="width: 700px; height: 500px;" /&gt; &lt;img alt="plots53x2011HLT/CMSSW_5_3_11_plot6.png" src="http://igormarfin.github.io/pages/static/plots53x2011HLT/CMSSW_5_3_11_plot6.png" style="width: 700px; height: 500px;" /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="figure-cmssw-5-3-11-plot5-cmssw-5-3-11-plot4"&gt;
&lt;h2&gt;Figure: CMSSW_5_3_11_plot5  CMSSW_5_3_11_plot4&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img alt="plots53x2011HLT/CMSSW_5_3_11_plot5.png" src="http://igormarfin.github.io/pages/static/plots53x2011HLT/CMSSW_5_3_11_plot5.png" style="width: 700px; height: 500px;" /&gt; &lt;img alt="plots53x2011HLT/CMSSW_5_3_11_plot4.png" src="http://igormarfin.github.io/pages/static/plots53x2011HLT/CMSSW_5_3_11_plot4.png" style="width: 700px; height: 500px;" /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="figure-cmssw-5-3-11-plot3-cmssw-5-3-11-plot2"&gt;
&lt;h2&gt;Figure: CMSSW_5_3_11_plot3  CMSSW_5_3_11_plot2&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img alt="plots53x2011HLT/CMSSW_5_3_11_plot3.png" src="http://igormarfin.github.io/pages/static/plots53x2011HLT/CMSSW_5_3_11_plot3.png" style="width: 700px; height: 500px;" /&gt; &lt;img alt="plots53x2011HLT/CMSSW_5_3_11_plot2.png" src="http://igormarfin.github.io/pages/static/plots53x2011HLT/CMSSW_5_3_11_plot2.png" style="width: 700px; height: 500px;" /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="figure-cmssw-5-3-11-plot1-53x-2011"&gt;
&lt;h2&gt;Figure: CMSSW_5_3_11_plot1  53X_2011&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img alt="plots53x2011HLT/CMSSW_5_3_11_plot1.png" src="http://igormarfin.github.io/pages/static/plots53x2011HLT/CMSSW_5_3_11_plot1.png" style="width: 700px; height: 500px;" /&gt; &lt;img alt="plots53x2011HLT/53X_2011.png" src="http://igormarfin.github.io/pages/static/plots53x2011HLT/53X_2011.png" style="width: 700px; height: 500px;" /&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="hlt"></category></entry><entry><title>Install python PIL ( Python image Library )</title><link href="http://igormarfin.github.com/pages/posts/2013/09/2241/install-python-pil-python-image-library/" rel="alternate"></link><updated>2013-09-06T22:41:19+02:00</updated><author><name>Igor Marfin</name></author><id>tag:igormarfin.github.com/pages,2013-09-06:posts/2013/09/2241/install-python-pil-python-image-library/</id><summary type="html">&lt;div class="section" id="it-helped-me-to-fix-a-problem-with-pil"&gt;
&lt;h2&gt;It helped me to fix a problem with PIL&lt;/h2&gt;
&lt;p&gt;I've taken ideas from &lt;a class="reference external" href="http://obroll.com/install-python-pil-python-image-library-on-ubuntu-11-10-oneiric/"&gt;http://obroll.com/install-python-pil-python-image-library-on-ubuntu-11-10-oneiric/&lt;/a&gt;.
First, uninstall current PIL:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo pip uninstall PIL
&lt;/pre&gt;
&lt;p&gt;Then install jpeglib, freetypes&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo apt-get install libjpeg8 libjpeg62-dev libfreetype6 libfreetype6-dev
&lt;/pre&gt;
&lt;p&gt;We should fix path libraries needed by PIL as :&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo ln -s /usr/lib/i386-linux-gnu/libjpeg.so /usr/lib
sudo ln -s /usr/lib/i386-linux-gnu/libfreetype.so /usr/lib
sudo ln -s /usr/lib/i386-linux-gnu/libz.so /usr/lib
&lt;/pre&gt;
&lt;p&gt;Now we are ready installing PIL by :&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo pip install -U PIL
&lt;/pre&gt;
&lt;/div&gt;
</summary><category term="how-to"></category></entry><entry><title>A sparse checkout in GIT</title><link href="http://igormarfin.github.com/pages/posts/2013/09/1143/a-sparse-checkout-in-git/" rel="alternate"></link><updated>2013-09-05T11:43:47+02:00</updated><author><name>Igor Marfin</name></author><id>tag:igormarfin.github.com/pages,2013-09-05:posts/2013/09/1143/a-sparse-checkout-in-git/</id><summary type="html">&lt;div class="section" id="is-there-any-way-to-clone-a-git-repository-s-sub-directory-only"&gt;
&lt;h2&gt;Is there any way to clone a git repository's sub-directory only?&lt;/h2&gt;
&lt;p&gt;Let's imagine that we have in a git repo which is  the root,  two a sub-dir&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
elemoine/blog/content/cv/
&lt;/pre&gt;
&lt;p&gt;Is there anyway to do checkout in one place only the sud-dir like so&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
svn co svn+ssh://admin&amp;#64;domain.com/home/admin/repos/elemoine/blog/content/cv/ cv
&lt;/pre&gt;
&lt;p&gt;The is called a sparse checkout, and that feature was added in git 1.7.0 (Feb. 2012).
This idea was brought by 'Chronial' at &lt;a class="reference external" href="http://stackoverflow.com/questions/600079/is-there-any-way-to-clone-a-git-repositorys-sub-directory-only"&gt;stackoverflow.com&lt;/a&gt;
The steps to do a sparse clone are as follows:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
git init my_cv
&lt;span class="nb"&gt;cd &lt;/span&gt;my_cv
git remote add -f origin https://github.com/elemoine/blog.git
&lt;/pre&gt;
&lt;p&gt;This creates an empty repository with your remote. Then do:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
git config core.sparsecheckout &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Now you need to define which files/folders you want to actually check out. This is done by listing them in .git/info/sparse-checkout, eg:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nb"&gt;echo &lt;/span&gt;content/cv &amp;gt;&amp;gt; .git/info/sparse-checkout
&lt;/pre&gt;
&lt;p&gt;Last but not least, update your empty repo with the state from the remote:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
git pull origin master
&lt;/pre&gt;
&lt;/div&gt;
</summary><category term="how-to"></category></entry><entry><title>Latex formulas in Pelican?</title><link href="http://igormarfin.github.com/pages/posts/2013/09/0118/latex-formulas-in-pelican/" rel="alternate"></link><updated>2013-09-05T01:18:39+02:00</updated><author><name>Igor Marfin</name></author><id>tag:igormarfin.github.com/pages,2013-09-05:posts/2013/09/0118/latex-formulas-in-pelican/</id><summary type="html">&lt;div class="section" id="how-to-setup-mathjax-properly"&gt;
&lt;h2&gt;How to setup Mathjax properly&lt;/h2&gt;
&lt;p&gt;I've taken a solution from the  Hans Frangohr's &lt;a class="reference external" href="http://www.southampton.ac.uk/~fangohr/blog/setting-up-pelican-how-to-make-equations-work.html"&gt;blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To be able to use equations in the static Pelican Blog generator, the key is to include a code snippet like&lt;/p&gt;
&lt;pre class="code html literal-block"&gt;
&lt;span class="c"&gt;&amp;lt;!-- Using MathJax, with the delimiters $ --&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- Conflict with pygments for the .mo and .mi --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/x-mathjax-config&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;MathJax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Hub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;HTML-CSS&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;.MathJax .mo, .MathJax .mi&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;black ! important&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="nx"&gt;tex2jax&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;inlineMath&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'$'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'$'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'\\\\('&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'\\\\)'&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt;&lt;span class="nx"&gt;processEscapes&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;in the template/base.html theme file (just before the &amp;lt;body&amp;gt; section.). I put it to my default theme template:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
nano -w themes/tuxlite_tbs/templates/base.html &lt;span class="c"&gt;# fix head in base.html&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;That's it.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="Latex"></category><category term="Mathjax"></category><category term="formula"></category><category term="mathmode"></category></entry><entry><title>Testing comments</title><link href="http://igormarfin.github.com/pages/posts/2013/09/0011/testing-comments/" rel="alternate"></link><updated>2013-09-05T00:11:24+02:00</updated><author><name>Igor Marfin</name></author><id>tag:igormarfin.github.com/pages,2013-09-05:posts/2013/09/0011/testing-comments/</id><summary type="html">&lt;div class="section" id="test-of-comments"&gt;
&lt;h2&gt;Test of comments&lt;/h2&gt;
&lt;p&gt;The comments can be supported via &lt;a class="reference external" href="http://disqus.com/"&gt;disqus.com&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="no-tags"></category></entry><entry><title>HOW-TO deploy the Pelican Blog</title><link href="http://igormarfin.github.com/pages/posts/2013/09/2337/how-to-deploy-the-pelican-blog/" rel="alternate"></link><updated>2013-09-04T23:37:47+02:00</updated><author><name>Igor Marfin</name></author><id>tag:igormarfin.github.com/pages,2013-09-04:posts/2013/09/2337/how-to-deploy-the-pelican-blog/</id><summary type="html">&lt;div class="section" id="all-steps"&gt;
&lt;h2&gt;All steps&lt;/h2&gt;
&lt;p&gt;Just repeate all steps below:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo apt-get install git
git config credential.helper store
sudo pip install pelican
mkdir myweb; &lt;span class="nb"&gt;cd &lt;/span&gt;myweb;
git clone --recursive https://github.com/getpelican/pelican-themes/ themes/

&lt;span class="c"&gt;#if need, ini repository
&lt;/span&gt;touch README.md
git init
git pull origin master
git add README.md
git commit -m &lt;span class="s2"&gt;&amp;quot;first commit&amp;quot;&lt;/span&gt;
git push git&amp;#64;github.com:igormarfin/pages master
&lt;span class="c"&gt;#if no, just clone
&lt;/span&gt;git clone https://github.com/igormarfin/pages.git
&lt;span class="nb"&gt;cd &lt;/span&gt;pages/
&lt;span class="nb"&gt;source&lt;/span&gt; ~/utils.sh
cp -r /mnt/WorkingPlace/myweb/themes/ .
create_config_rst_blog  &lt;span class="s2"&gt;&amp;quot;Igor Marfin&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Igor Marfin's home page&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://igormarfin.github.com/pages&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;iggy.floyd.de&amp;#64;gmal.comNOTSPAM&amp;quot;&lt;/span&gt;
mkdir -p  ./posts/&lt;span class="sb"&gt;`&lt;/span&gt;date +%Y&lt;span class="sb"&gt;`&lt;/span&gt;/&lt;span class="sb"&gt;`&lt;/span&gt;date +%m&lt;span class="sb"&gt;`&lt;/span&gt;
add_rst_blog &lt;span class="s2"&gt;&amp;quot;Igor Marfin&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;About me&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;no-tags&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;About me&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Example of the pelican use&amp;quot;&lt;/span&gt; &amp;gt; posts/&lt;span class="sb"&gt;`&lt;/span&gt;date +%Y&lt;span class="sb"&gt;`&lt;/span&gt;/&lt;span class="sb"&gt;`&lt;/span&gt;date +%m&lt;span class="sb"&gt;`&lt;/span&gt;/about_me2.rst
pelican posts/ -s ./short_local_settings.py
firefox output/index.html
deploy_rst_blog  &lt;span class="s2"&gt;&amp;quot;local_settings.py&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;My first post&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;igormarfin&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pages&amp;quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;That's it.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="how-to"></category></entry><entry><title>Test of Pelican</title><link href="http://igormarfin.github.com/pages/posts/2013/09/2331/test-of-pelican/" rel="alternate"></link><updated>2013-09-04T23:31:41+02:00</updated><author><name>Igor Marfin</name></author><id>tag:igormarfin.github.com/pages,2013-09-04:posts/2013/09/2331/test-of-pelican/</id><summary type="html">&lt;div class="section" id="example-of-the-pelican-use"&gt;
&lt;h2&gt;Example of the pelican use&lt;/h2&gt;
&lt;p&gt;Hi!&lt;/p&gt;
&lt;p&gt;This is my first rst post!&lt;/p&gt;
&lt;p&gt;And this is a link to a &lt;a class="reference external" href="http://desy.de/"&gt;page&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="test"></category></entry></feed>